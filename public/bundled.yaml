openapi: 3.1.0
info:
  title: Task API
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local development servers
  - url: https://task-api-vvf0.onrender.com
    description: Production server on render
tags:
  - name: Tasks
    description: Task-related endpoints
paths:
  /tasks:
    get:
      summary: list all tasks
      tags:
        - Tasks
      parameters:
        - name: completed
          in: query
          required: false
          description: Filter tasks by completion status
          schema:
            type: boolean
            example: true
        - name: limit
          in: query
          required: false
          description: Maximum number of tasks to return
          schema:
            type: integer
            example: 10
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
    post:
      summary: Create a new task
      tags:
        - Tasks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '400':
          $ref: '#/components/responses/BadRequest'
  /tasks/{id}:
    get:
      summary: Get task by ID
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          schema:
            type: integer
            minimum: 1
            example: 1
          required: true
          description: Numeric ID of the user to get
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
        '400':
          description: ID is not a number
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Validation Failed
                  details:
                    type: array
                    items: string
                    example:
                      - ID must be a number
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Task not found
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          readOnly: true
          type: integer
          example: 1
        title:
          type: string
          example: Buy groceries
        completed:
          type: boolean
          example: false
    ValidationError:
      type: object
      properties:
        error:
          type: string
          example: Validation failed
        details:
          type: array
          items:
            type: string
  responses:
    BadRequest:
      description: Invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
